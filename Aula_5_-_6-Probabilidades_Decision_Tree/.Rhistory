s
m <- mtcars
View(m)
View(m)
set.seed(33)
va<-sample(32)
treino<-m[va[1:24]]
treino<-m[va[1:24],]
teste<-m[va[25:32],]
plot(m$mpg~m$wt)
mod<-lm(mpg~wt,data=treino)
summary(mod)
p<-predict(mod, teste)
cbind(p,teste$mpg)
cbind(p,teste$mpg, p-teste$mpg)
sse<-sum((p-teste$mpg)^2)
p<-predict(mod, newdata=teste)
cbind(p,teste$mpg)
cbind(p,teste$mpg, p-teste$mpg)
sse<-sum((p-teste$mpg)^2)
cor(m$mpg, m$wt)
cor(m$mpg, m$wt)
cor(m$mpg, log(m$wt))
cor(m$mpg, log(m$wt))
plot(m$mpg~log(m$wt))
# Aula 5
m <- mtcars
# amostra aleatória
set.seed(33)
treino<-m[va[1:24],]
teste<-m[va[25:32],]
#coeficiente de correlação linear, para selecionar variaveis
plot(m$mpg~m$wt)
#modelo de regressão linear
#mod<-lm(mpg~wt,data=treino)
mod<-lm(mpg~log(wt),data=treino)
summary(mod)
#Previsão a partir dos dados de tes
p<-predict(mod, newdata=teste)
#Visualização previsão vs real
cbind(p,teste$mpg)
#calculo erro de previsão - diferença quadrado = sse
cbind(p,teste$mpg, p-teste$mpg)
sse<-sum((p-teste$mpg)^2)
# Aula 5
m <- mtcars
# amostra aleatória
set.seed(33)
treino<-m[va[1:24],]
teste<-m[va[25:32],]
#coeficiente de correlação linear, para selecionar variaveis
plot(m$mpg~m$wt)
#modelo de regressão linear
#mod<-lm(mpg~wt,data=treino)
#mod<-lm(mpg~log(wt),data=treino)
mod<-lm(mpg~poly(wt,2),data=treino)
summary(mod)
#Previsão a partir dos dados de tes
p<-predict(mod, newdata=teste)
#Visualização previsão vs real
cbind(p,teste$mpg)
#calculo erro de previsão - diferença quadrado = sse
cbind(p,teste$mpg, p-teste$mpg)
sse<-sum((p-teste$mpg)^2)
# Aula 5
m <- mtcars
# amostra aleatória
set.seed(33)
treino<-m[va[1:24],]
teste<-m[va[25:32],]
#coeficiente de correlação linear, para selecionar variaveis
plot(m$mpg~m$wt)
#modelo de regressão linear
#mod<-lm(mpg~wt,data=treino)
#mod<-lm(mpg~log(wt),data=treino)
#mod<-lm(mpg~poly(wt,2),data=treino)
mod<-lm(mpg~poly(wt,2),data=treino)
summary(mod)
#Previsão a partir dos dados de tes
p<-predict(mod, newdata=teste)
#Visualização previsão vs real
cbind(p,teste$mpg)
#calculo erro de previsão - diferença quadrado = sse
cbind(p,teste$mpg, p-teste$mpg)
sse<-sum((p-teste$mpg)^2)
# Aula 5
m <- mtcars
# amostra aleatória
set.seed(33)
treino<-m[va[1:24],]
teste<-m[va[25:32],]
#coeficiente de correlação linear, para selecionar variaveis
plot(m$mpg~m$wt)
#modelo de regressão linear
#mod<-lm(mpg~wt,data=treino)
#mod<-lm(mpg~log(wt),data=treino)
#mod<-lm(mpg~poly(wt,2),data=treino)
mod<-lm(mpg~poly(wt,8),data=treino)
summary(mod)
#Previsão a partir dos dados de tes
p<-predict(mod, newdata=teste)
#Visualização previsão vs real
cbind(p,teste$mpg)
#calculo erro de previsão - diferença quadrado = sse
cbind(p,teste$mpg, p-teste$mpg)
sse<-sum((p-teste$mpg)^2)
# Aula 5
m <- mtcars
# amostra aleatória
set.seed(33)
treino<-m[va[1:24],]
teste<-m[va[25:32],]
#coeficiente de correlação linear, para selecionar variaveis
plot(m$mpg~m$wt)
#modelo de regressão linear
#mod<-lm(mpg~wt,data=treino)
#mod<-lm(mpg~log(wt),data=treino)
#mod<-lm(mpg~poly(wt,2),data=treino)
mod<-lm(mpg~poly(wt,7),data=treino)
summary(mod)
#Previsão a partir dos dados de tes
p<-predict(mod, newdata=teste)
#Visualização previsão vs real
cbind(p,teste$mpg)
#calculo erro de previsão - diferença quadrado = sse
cbind(p,teste$mpg, p-teste$mpg)
sse<-sum((p-teste$mpg)^2)
# Aula 5
m <- mtcars
# amostra aleatória
set.seed(33)
treino<-m[va[1:24],]
teste<-m[va[25:32],]
#coeficiente de correlação linear, para selecionar variaveis
plot(m$mpg~m$wt)
#modelo de regressão linear
#mod<-lm(mpg~wt,data=treino)
#mod<-lm(mpg~log(wt),data=treino)
#mod<-lm(mpg~poly(wt,2),data=treino)
mod<-lm(mpg~poly(wt,12),data=treino)
summary(mod)
#Previsão a partir dos dados de tes
p<-predict(mod, newdata=teste)
#Visualização previsão vs real
cbind(p,teste$mpg)
#calculo erro de previsão - diferença quadrado = sse
cbind(p,teste$mpg, p-teste$mpg)
sse<-sum((p-teste$mpg)^2)
# Aula 5
m <- mtcars
# amostra aleatória
set.seed(33)
treino<-m[va[1:24],]
teste<-m[va[25:32],]
#coeficiente de correlação linear, para selecionar variaveis
plot(m$mpg~m$wt)
#modelo de regressão linear
#mod<-lm(mpg~wt,data=treino)
#mod<-lm(mpg~log(wt),data=treino)
#mod<-lm(mpg~poly(wt,2),data=treino)
mod<-lm(mpg~poly(wt,30),data=treino)
summary(mod)
#Previsão a partir dos dados de tes
p<-predict(mod, newdata=teste)
#Visualização previsão vs real
cbind(p,teste$mpg)
#calculo erro de previsão - diferença quadrado = sse
cbind(p,teste$mpg, p-teste$mpg)
sse<-sum((p-teste$mpg)^2)
# Aula 5
m <- mtcars
# amostra aleatória
set.seed(33)
treino<-m[va[1:24],]
teste<-m[va[25:32],]
#coeficiente de correlação linear, para selecionar variaveis
plot(m$mpg~m$wt)
#modelo de regressão linear
#mod<-lm(mpg~wt,data=treino)
#mod<-lm(mpg~log(wt),data=treino)
#mod<-lm(mpg~poly(wt,2),data=treino)
mod<-lm(mpg~poly(wt,30),data=treino)
summary(mod)
#Previsão a partir dos dados de tes
p<-predict(mod, newdata=teste)
#Visualização previsão vs real
cbind(p,teste$mpg)
#calculo erro de previsão - diferença quadrado = sse
cbind(p,teste$mpg, p-teste$mpg)
sse<-sum((p-teste$mpg)^2)
# Aula 5
m <- mtcars
# amostra aleatória
set.seed(33)
treino<-m[va[1:24],]
teste<-m[va[25:32],]
#coeficiente de correlação linear, para selecionar variaveis
plot(m$mpg~m$wt)
#modelo de regressão linear
#mod<-lm(mpg~wt,data=treino)
#mod<-lm(mpg~log(wt),data=treino)
#mod<-lm(mpg~poly(wt,2),data=treino)
#mod<-lm(mpg~poly(wt,30),data=treino)
mod<-(mpg~wt+cyl,data=treino)
summary(mod)
#Previsão a partir dos dados de tes
p<-predict(mod, newdata=teste)
#Visualização previsão vs real
cbind(p,teste$mpg)
#calculo erro de previsão - diferença quadrado = sse
cbind(p,teste$mpg, p-teste$mpg)
sse<-sum((p-teste$mpg)^2)
# Aula 5
m <- mtcars
# amostra aleatória
set.seed(33)
treino<-m[va[1:24],]
teste<-m[va[25:32],]
#coeficiente de correlação linear, para selecionar variaveis
plot(m$mpg~m$wt)
#modelo de regressão linear
#mod<-lm(mpg~wt,data=treino)
#mod<-lm(mpg~log(wt),data=treino)
#mod<-lm(mpg~poly(wt,2),data=treino)
#mod<-lm(mpg~poly(wt,30),data=treino)
mod<-(mpg~wt+cyl,data=treino)
summary(mod)
#Previsão a partir dos dados de tes
p<-predict(mod, newdata=teste)
#Visualização previsão vs real
cbind(p,teste$mpg)
#calculo erro de previsão - diferença quadrado = sse
cbind(p,teste$mpg, p-teste$mpg)
sse<-sum((p-teste$mpg)^2)
# Aula 5
m <- mtcars
# amostra aleatória
set.seed(33)
treino<-m[va[1:24],]
teste<-m[va[25:32],]
#coeficiente de correlação linear, para selecionar variaveis
plot(m$mpg~m$wt)
#modelo de regressão linear
#mod<-lm(mpg~wt,data=treino)
#mod<-lm(mpg~log(wt),data=treino)
#mod<-lm(mpg~poly(wt,2),data=treino)
#mod<-lm(mpg~poly(wt,30),data=treino)
mod<-(mpg~wt+cyl,data=treino)
summary(mod)
#Previsão a partir dos dados de tes
p<-predict(mod, newdata=teste)
#Visualização previsão vs real
cbind(p,teste$mpg)
#calculo erro de previsão - diferença quadrado = sse
cbind(p,teste$mpg, p-teste$mpg)
sse<-sum((p-teste$mpg)^2)
sse<-sum((p-teste$mpg)^2)
# Aula 5
m <- mtcars
# amostra aleatória
set.seed(33)
treino<-m[va[1:24],]
teste<-m[va[25:32],]
#coeficiente de correlação linear, para selecionar variaveis
plot(m$mpg~m$wt)
#modelo de regressão linear
#mod<-lm(mpg~wt,data=treino)
#mod<-lm(mpg~log(wt),data=treino)
#mod<-lm(mpg~poly(wt,2),data=treino)
#mod<-lm(mpg~poly(wt,30),data=treino)
#mod<-(mpg~wt+cyl,data=treino)
#incluindo variavel cyl como variavel categorica
mod<-lm(mpg~wt+as.factor(cyl),data=treino)
summary(mod)
#Previsão a partir dos dados de tes
p<-predict(mod, newdata=teste)
#Visualização previsão vs real
cbind(p,teste$mpg)
#calculo erro de previsão - diferença quadrado = sse
cbind(p,teste$mpg, p-teste$mpg)
sse<-sum((p-teste$mpg)^2)
install.packages("dummies")
library(dummies)
m<-cbind(m,dummy(m$cyl))
setwd("~/Codes/personal_github/Shift_machine_learning/Aula_5")
d <- read.csv("train.csv")
nrow(d[d$Survived==1,])
sobr< - nrow(d[d$Survived==1,])
sobr<- nrow(d[d$Survived==1,])
sobr/nrow(d)
##Quantas mulheres - probabilidade
mul<- nrow(d[d$Sex=="female",])
#probabilidade de sobrevivencia
mul/nrow(d)
install.packages("sqldf")
library(sqldf)
df <- sqldf("select Survived, count() from d group by Survived")
df
table(d$Survived)
mul_viva<- nrow(d[d$Sex=="female"&d$Survived==1,])
mul_viva/nrow(d)
df
