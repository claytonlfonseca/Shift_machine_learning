1+1
# Comandos Básicos do R
a <- 23
a + 1
b <- a + 1
m <- mtcars
View(m)
View(m)
View(m)
# Amostra das primeiras 6 linhas
head(m)
view(head(m))
View(head(m))
# Exportar Dados
write.csv(m, "mtcars.csv")
# Exportar Dados
write.csv(m, "mtcars.csv")
# Exportar Dados
write.csv(m, "mtcars.csv")
setwd("~/Codes/personal_github/Shift_machine_learning")
# Exportar Dados
write.csv(m, "mtcars.csv")
# Importar Dados
m <- read.csv("mtcars.csv")
View(head(m))
install.packages("ggplot2")
install.packages(c("boot", "foreign", "KernSmooth", "mgcv", "nlme", "survival"))
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
library(ggplot2)
# Carregar uma package previamente instalada
library(ggplot2)
# Amostragem
d <- diamonds
# População 53940 Diamantes
# Geração Amostra de 3000 linhas
a1 <- d[1:3000,]
# Média da população
mean(d$price)
# Mediana de Price dentro da população
median(d$price)
# Desvio Padrão
sd(d$price)
# Estatisitcas descritivas  da Amostra
#média
mean(a1$price)
# Mediana
median(a1$price)
# Desvio Padrão
sd(a1$price)
hist(d$price)
hist(a1$price)
# Geração de amostra de 3000 linhas
a2 <- d[3001:6000]
# Estatisticas descritivas
# Média
mean(a2$price)
# Mediana
median(a2$price)
# Geração de amostra de 3000 linhas
a2 <- d[3001:6000]
# Geração de amostra de 3000 linhas
a2 <- d[3001:6000,]
# Estatisticas descritivas
# Média
mean(a2$price)
# Mediana
median(a2$price)
# Desvio Padrao
sd(a2$price)
# Histograma
hist(a2$price)
# Janela Grafica 2x3
par(mfrow=c(2,2))
hist(d$price)
hist(a1$price)
hist(a2$price)
# Gerar um numero aleatório
sample(3)
# Gerar um numero aleatório
sample(3)
# Gerar um numero aleatório
sample(3)
# Gerar um numero aleatório
sample(3)
# Gerar um numero aleatório
set.seed(33)
sample(3)
sample(3)
sample(3)
# Gerar um numero aleatório
set.seed(33)
sample(3)
sample(3)
# Gerar um numero aleatório
set.seed(33) # Setar a semente de comparação
sample(3)
# Gerar um numero aleatório
set.seed(33) # Setar a semente de comparação
sample(3)
# Gerar um numero aleatório
set.seed(33) # Setar a semente de comparação
sample(3)
# Gerar Amostra aleatória da população
set.seed(33)
va <- sample(nrow(d))
a3 <- d[va[1:3000,]]
a3 <- d[va[1:3000],]
mean(a3$price)
median(a3$price)
sd(a3$price)
hist(a3$price)
# Estatística descritiva
# Quartis
summary(d)
summary(a3)
summary(d$price)
summary(a3$price)
# Boxplot
boxplot(d$price)
boxplot(a3$price)
# Boxplot
boxplot(d$price)
boxplot(a1$price)
boxplot(a2$price)
# Boxplot
boxplot(d$price)
boxplot(a1$price)
boxplot(a2$price)
boxplot(a3$price)
# Boxplot
par(mfrow=c(2,2))
boxplot(d$price)
boxplot(a1$price)
boxplot(a2$price)
boxplot(a3$price)
a <- anscombe
mean(a$x1)
mean(a$x2)
mean(a$x3)
mean(a$x4)
mean(a$y1)
mean(a$y1)
mean(a$y2)
mean(a$y3)
mean(a$y4)
sd(a$y1)
sd(a$y2)
sd(a$y3)
sd(a$y4)
sd(a$x1)
sd(a$x2)
sd(a$x3)
sd(a$x4)
sd(a$x2)
sd(a$x3)
sd(a$x4)
sd(a$y1)
sd(a$y2)
sd(a$y3)
sd(a$y4)
plot(m$mpg~m$wt)
# coeficiente de correlação linear
cor(m$mpg, m$wt)
m <- mtcars
cor(m)
m <- mtcars
cor(m)
cor(a$y1, a$x1)
cor(a$y2, a$x2)
cor(a$y3, a$x3)
cor(a$y4, a$x4)
plot(a$y1, a$x1)
plot(a$y2, a$x2)
plot(a$y3, a$x3)
plot(a$y4, a$x4)
par(mfrow=c(2,2))
plot(a$y1, a$x1)
plot(a$y2, a$x2)
plot(a$y3, a$x3)
plot(a$y4, a$x4)
